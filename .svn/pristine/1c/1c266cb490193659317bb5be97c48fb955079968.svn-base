package com.javasampleapproach.s3.services.impl;

import java.io.File;
import java.io.IOException;

import com.amazonaws.services.s3.model.PutObjectResult;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.amazonaws.AmazonClientException;
import com.amazonaws.AmazonServiceException;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.amazonaws.services.s3.model.PutObjectRequest;
import com.amazonaws.services.s3.model.S3Object;
import com.javasampleapproach.s3.services.S3Services;
import com.javasampleapproach.s3.util.Utility;

@Service
public class S3ServicesImpl implements S3Services {
	
	private Logger logger = LoggerFactory.getLogger(S3ServicesImpl.class);
	
	@Autowired
	private AmazonS3 s3client;

	@Value("${jsa.s3.bucket}")
	private String bucketName;

	@Value("${shouldDownload}")
	private boolean shouldDownload;

	@Value("${shouldUpload}")
	private boolean shouldUpload;

	@Override
	public void downloadFile(String keyName) {
		if (shouldDownload) {
			try {


				System.out.println("---------------- START DOWNLOAD FILE ----------------");
				System.out.println("Downloading from bucket '" + bucketName);
				S3Object s3object = s3client.getObject(new GetObjectRequest(bucketName, keyName));
				System.out.println("File name =" + keyName
						+ "\nFile-Type =" + s3object.getObjectMetadata().getContentType()
						+ "\nFile size =" + s3object.getObjectMetadata().getContentLength() + " bytes"
				);
				//Utility.displayText(s3object.getObjectContent());
				logger.info("===================== Import File - Done! =====================");

			} catch (AmazonServiceException ase) {
				logger.info("Caught an AmazonServiceException from GET requests, rejected reasons:");
				logger.info("Error Message:    " + ase.getMessage());
				logger.info("HTTP Status Code: " + ase.getStatusCode());
				logger.info("AWS Error Code:   " + ase.getErrorCode());
				logger.info("Error Type:       " + ase.getErrorType());
				logger.info("Request ID:       " + ase.getRequestId());
			} catch (AmazonClientException ace) {
				logger.info("Caught an AmazonClientException: ");
				logger.info("Error Message: " + ace.getMessage());
			}
		}
		else
			System.out.println("pls enable shouldDownload=true in application.properties");
//        catch (IOException ioe) {
//        	logger.info("IOE Error Message: " + ioe.getMessage());
//		}
	}

	@Override
	public PutObjectResult uploadFile(String keyName, String uploadFilePath) {
		PutObjectResult putObjectResult = null;
		if (shouldUpload) {

			try {
				System.out.println("---------------- START UPLOAD FILE ----------------");
				System.out.println("Uploading to bucket '" + bucketName);
				File file = new File(uploadFilePath);
				s3client.putObject(new PutObjectRequest(bucketName, keyName, file));

				logger.info("===================== Upload File - Done! =====================");

			} catch (AmazonServiceException ase) {
				logger.info("Caught an AmazonServiceException from PUT requests, rejected reasons:");
				logger.info("Error Message:    " + ase.getMessage());
				logger.info("HTTP Status Code: " + ase.getStatusCode());
				logger.info("AWS Error Code:   " + ase.getErrorCode());
				logger.info("Error Type:       " + ase.getErrorType());
				logger.info("Request ID:       " + ase.getRequestId());
			} catch (AmazonClientException ace) {
				logger.info("Caught an AmazonClientException: ");
				logger.info("Error Message: " + ace.getMessage());
			}

		}
		else {
			System.out.println("pls enable shouldUpload=true in application.properties");

		}
		return putObjectResult;
	}

}
